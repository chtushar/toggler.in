// Code generated by sqlc. DO NOT EDIT.
// source: users.sql

package query

import (
	"context"
)

const addUser = `-- name: AddUser :one
INSERT INTO users (name, password, email)
VALUES ($1, $2, $3)
RETURNING id, name, password, email, email_verified, created_at, updated_at
`

type AddUserParams struct {
	Name     string `db:"name"`
	Password string `db:"password"`
	Email    string `db:"email"`
}

func (q *Queries) AddUser(ctx context.Context, arg AddUserParams) (User, error) {
	row := q.db.QueryRow(ctx, addUser, arg.Name, arg.Password, arg.Email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Password,
		&i.Email,
		&i.EmailVerified,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, name, password, email, email_verified, created_at, updated_at FROM users
WHERE id = $1
`

func (q *Queries) GetUser(ctx context.Context, id int32) (User, error) {
	row := q.db.QueryRow(ctx, getUser, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Password,
		&i.Email,
		&i.EmailVerified,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
